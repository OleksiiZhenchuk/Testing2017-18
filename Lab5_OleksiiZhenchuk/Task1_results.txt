В результаті виконання програми були отримані наступні результати:
Adding time
ArrayList: 315603
LinkedList: 5433
TreeSet: 426994
HashSet: 28074
Adding in middle time
ArrayList: 58865
LinkedList: 49356
Search time if consecutive
ArrayList: 40752
LinkedList: 38035
TreeSet: 24904
HashSet: 18565
Search time if random
ArrayList: 319679
LinkedList: 235457
TreeSet: 4528
HashSet: 1811
Remove time
ArrayList: 27168
LinkedList: 43469
TreeSet: 19018
HashSet: 19924

Вимірювання часу додавання до колекцій ArrayList та LinkedList для пустої колеції та в середині було необхідним тому,
що час додавання в цих випадках буде різним, оскільки в двозв'язному списку LinkedList для цього треба лише попрацювати
з адресами у відповідних сусідніх елементів, а для ArrayList потрібно зсувати наступні елементи списку, тому додавання
елементу до ArrayList є довшим, хоча при пустій колекції різниця в часі більша.

Доцільно порівнювати час у парах ArrayList, LinkedList та TreeSet, HashSet оскільки другі це колекції в яких повторення
елементів неможливе та вони фактично є реалізацією множин, зручною для пошуку, що ми і бачимо за часом. Також вони
видаляють елементи швидше за List-и, але TreeSet має великий час додавання. LinkedList виявився швидшим за часом додавання
та пошуку, але водночас видаляє довше.

Час пошуку був виміряний для двох ситуацій, заповнення колекцій послідовно або випадково, оскільки при випадковому заповненні
видно, що час пошуку в TreeSet та HashSet значно виграє у списків, у яких для цього потрібно послідовно перебирати елементи.